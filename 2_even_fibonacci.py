"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
"""

BOUND = 4000000  # four million
GLOBAL_LIST = [0, 1]


def fibonacci(num1: int = 0, num2: int = 1):
    next_num = num1 + num2
    if next_num >= BOUND:
        print(f'\nThat is upper bound is {num2}')
        return
    print(f'{next_num}', end=', ')
    GLOBAL_LIST.append(next_num)
    fibonacci(num2, next_num)
    return GLOBAL_LIST


result = sum(filter(lambda x: x % 2 == 0, fibonacci()))
print(f'The result is {result}')

# another decision

s, a, b = 0, 1, 2

while b < 4*10**6:
    if b % 2 == 0:
        s += b
    a, b = b, a + b

print(s)
